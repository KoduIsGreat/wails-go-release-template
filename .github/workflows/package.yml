on:
  push:
    branches: [ main, develop ]

jobs:
  semver:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semrel.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Get the current branch name
        shell: bash
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
        id: myref
      - uses: go-semantic-release/action@v1
        id: semrel
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          changelog-generator-opt: "emojis=true"
          allow-initial-development-versions: true
          prerelease: ${{ steps.myref.outputs.branch == 'develop'}}
  package:
    strategy:
      matrix:
        go-version: [1.17.x]
        platform: [macos-10.15, ubuntu-20.04, windows-2019]
    runs-on: ${{ matrix.platform }}
    needs: [semver]
    if: needs.semver.outputs.version != ''
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Wails
        run: go install github.com/wailsapp/wails/cmd/wails@v1.16.8

      - name: Build for darwin
        if: matrix.platform == 'macos-10.15'
        run: |
          mkdir -p ~/.wails
          cp wails.json ~/.wails/
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${{ needs.semver.outputs.version }}" info.plist
          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString ${{ needs.semver.outputs.version }}" info.plist
          wails build -f -p -ldflags "-X test/internal/app.semver=${{ needs.semver.outputs.version }}"
      - name: Create darwin disk image
        if: matrix.platform == 'macos-10.15'
        run: |
          brew install create-dmg
          test -f Test.dmg && rm Test.dmg
          rm build/test
          create-dmg \
            --volname "Test" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "Test.app" 200 190 \
            --hide-extension "Test.app" \
            --app-drop-link 600 185 \
            "Test_${{ needs.semver.outputs.version }}_Darwin_x86_64.dmg" \
            "build/"
      - name: Upload darwin disk image
        if: matrix.platform == 'macos-10.15'
        uses: actions/upload-artifact@v2
        with:
          name: Test_${{ needs.semver.outputs.version }}_Darwin_x86_64.dmg
          path: Test_${{ needs.semver.outputs.version }}_Darwin_x86_64.dmg

      # linux
      - name: Build for linux
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt update && sudo apt install -y libgtk-3-dev libwebkit2gtk-4.0-dev
          mkdir -p ~/.wails
          cp wails.json ~/.wails/
          wails build -f -ldflags "-X test/internal/app.semver=${{ needs.semver.outputs.version }}"
          tar -C build -zcvf Test_${{ needs.semver.outputs.version }}_Linux_x86_64.tar.gz test
      - name: Upload linux tar.gz
        if: matrix.platform == 'ubuntu-20.04'
        uses: actions/upload-artifact@v2
        with:
          name: Test_${{ needs.semver.outputs.version }}_Linux_x86_64.tar.gz
          path: Test_${{ needs.semver.outputs.version }}_Linux_x86_64.tar.gz

      # - name: Create linux app image
      #   if: matrix.platform == 'ubuntu-20.04'
      #   run: |
      #     wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
      #     chmod +x linuxdeploy-x86_64.AppImage
      #     mogrify -resize 512x512 appicon.png
      #     ./linuxdeploy*.AppImage --appdir AppDir --executable build/test --desktop-file AppImage.desktop --icon-file appicon.png --output appimage
      #     mv Test*.AppImage Test_${{ needs.semver.outputs.version }}_Linux_x86_64.AppImage

      # - name: Upload linux app image
      #   if: matrix.platform == 'ubuntu-20.04'
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: Test_${{ needs.semver.outputs.version }}_Linux_x86_64.AppImage
      #     path: Test_${{ needs.semver.outputs.version }}_Linux_x86_64.AppImage

      # windows
      - name: Build for windows
        if: matrix.platform == 'windows-2019'
        run: |
          New-Item -ItemType directory -Path "$HOME\.wails" -Force
          Copy-Item -Path "$PWD\wails.json" -Destination "$HOME\.wails\wails.json"
          choco install mingw
          wails build -f -p -ldflags "-X test/internal/app.semver=${{ needs.semver.outputs.version }}"
          Compress-Archive -Path "$PWD\build\test.exe" -DestinationPath "$PWD\Test_${{ needs.semver.outputs.version }}_Windows_x86_64.zip"
      - name: Upload windows zip
        if: matrix.platform == 'windows-2019'
        uses: actions/upload-artifact@v2
        with:
          name: Test_${{ needs.semver.outputs.version }}_Windows_x86_64.zip
          path: Test_${{ needs.semver.outputs.version }}_Windows_x86_64.zip
  release:
    runs-on: ubuntu-latest
    needs: [semver,package]
    steps:
      - name: Download all release packages
        uses: actions/download-artifact@v2
      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.semver.outputs.version }}
          files: |
            Test_${{ needs.semver.outputs.version }}_Windows_x86_64.zip/Test_${{ needs.semver.outputs.version }}_Windows_x86_64.zip
            Test_${{ needs.semver.outputs.version }}_Darwin_x86_64.dmg/Test_${{ needs.semver.outputs.version }}_Darwin_x86_64.dmg
            Test_${{ needs.semver.outputs.version }}_Linux_x86_64.tar.gz/Test_${{ needs.semver.outputs.version }}_Linux_x86_64.tar.gz

